// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lcfc.auth.data;

namespace lcfc.auth.data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20190218055900_20190218r1")]
    partial class _20190218r1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("lcfc.auth.data.Domain", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Domain");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Account", b =>
                {
                    b.Property<long>("Number")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Domain");

                    b.Property<string>("Email");

                    b.Property<bool>("Enabled");

                    b.Property<bool>("IsSystemed");

                    b.Property<string>("Location");

                    b.Property<string>("MobileNum");

                    b.Property<string>("NickName");

                    b.Property<long?>("ParentNumber");

                    b.Property<string>("Status");

                    b.Property<string>("TargetKey");

                    b.Property<TimeSpan>("TimeStamp");

                    b.Property<string>("Type");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Number");

                    b.HasIndex("Domain");

                    b.HasIndex("Email");

                    b.HasIndex("MobileNum");

                    b.HasIndex("ParentNumber")
                        .IsUnique();

                    b.ToTable("Account");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.AccountRoleMap", b =>
                {
                    b.Property<long>("Account");

                    b.Property<long>("RoleId");

                    b.Property<DateTime>("BeginTime");

                    b.Property<bool>("ByDepend");

                    b.Property<bool>("ByManual");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Domain");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Location");

                    b.Property<TimeSpan>("TimeStamp");

                    b.HasKey("Account", "RoleId");

                    b.ToTable("AccountRoleMap");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Location", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("Deep");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<string>("Domain");

                    b.Property<string>("Language");

                    b.Property<string>("Level");

                    b.Property<string>("Name");

                    b.Property<string>("ParentCode");

                    b.Property<TimeSpan>("TimeStamp");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Code");

                    b.HasIndex("ParentCode")
                        .IsUnique();

                    b.HasIndex("Domain", "Name")
                        .IsUnique();

                    b.ToTable("Location");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Passport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Account");

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Domain");

                    b.Property<string>("EncryptType");

                    b.Property<bool>("IsExternal");

                    b.Property<string>("Location");

                    b.Property<string>("LoginName");

                    b.Property<string>("Password");

                    b.Property<TimeSpan>("TimeStamp");

                    b.Property<string>("Token");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.HasIndex("Account");

                    b.HasIndex("LoginName", "Domain")
                        .IsUnique();

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description");

                    b.Property<string>("Domain");

                    b.Property<string>("Label");

                    b.Property<string>("Language");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<TimeSpan>("TimeStamp");

                    b.Property<DateTime>("UpdateTime");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Domain")
                        .IsUnique();

                    b.ToTable("Role");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.RoleModuleMap", b =>
                {
                    b.Property<long>("RoleId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Domain");

                    b.Property<string>("Location");

                    b.Property<string>("Package");

                    b.Property<TimeSpan>("TimeStamp");

                    b.Property<string>("Title");

                    b.HasKey("RoleId", "Name");

                    b.HasIndex("Title", "Domain")
                        .IsUnique();

                    b.ToTable("RoleModuleMap");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Account", b =>
                {
                    b.HasOne("lcfc.auth.data.Entities.Account", "Parent")
                        .WithOne()
                        .HasForeignKey("lcfc.auth.data.Entities.Account", "ParentNumber");
                });

            modelBuilder.Entity("lcfc.auth.data.Entities.Location", b =>
                {
                    b.HasOne("lcfc.auth.data.Entities.Location", "Parent")
                        .WithOne()
                        .HasForeignKey("lcfc.auth.data.Entities.Location", "ParentCode");
                });
#pragma warning restore 612, 618
        }
    }
}
